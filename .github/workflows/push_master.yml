name: Build and publish NuGet package


on:
  push:
    branches:
    - "master"


jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: 5.x
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.7
      id: gitversion
      with:
        useConfigFile: true
        configFilePath: ./.github/config/gitversion.yml
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Create NuGet package
      run: dotnet pack -c Release -p:Version=${{steps.gitversion.outputs.SemVer}} -p:PackageVersion=${{steps.gitversion.outputs.SemVer}} --output ${{ github.workspace}}/nuget
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: nuget
        path: ${{ github.workspace}}/nuget/*.nupkg
    outputs: 
      version: ${{ steps.gitversion.outputs.SemVer }}
      
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: nuget
        path: ${{ github.workspace}}/nuget
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Publish
      run: dotnet nuget push ${{ github.workspace}}/nuget/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_KEY }} --skip-duplicate
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{needs.build.outputs.version}}
        release_name: ${{needs.build.outputs.version}}
        draft: false
        prerelease: false
